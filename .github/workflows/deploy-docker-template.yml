name: Deploy Docker Project Template

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      PROJECT_NAME:
        required: true
        type: string
      SSH_USER:
        required: true
        type: string
      SSH_HOST:
        required: true
        type: string
      DOCKER_IMAGE:
        required: true
        type: string
      DOCKER_USERNAME:
        required: true
        type: string
      DOCKER_PASSWORD:
        required: true
        type: string
      DOCKER_RUN_ENVS:
        required: true
        type: string
      SSH_REMOTE_PORT:
        required: false
        type: number
        default: 22
    secrets:
      PEM_KEY:
        required: true

jobs:
  deploy:
    name: üöÄ Deploy Docker Project ${{ inputs.PROJECT_NAME }} (${{ inputs.ENVIRONMENT }})
    runs-on: ubuntu-latest

    steps:
      - name: üõí Checkout c√≥digo
        uses: actions/checkout@v2

      - name: üõ†Ô∏è Instalar depend√™ncias do projeto
        run: yarn install

      - name: üèóÔ∏è Buildar o projeto
        run: yarn build

      - name: üîë Configurar chave SSH privada
        run: |
          echo "${{ secrets.PEM_KEY }}" > ./deploy-key.pem
          chmod 600 ./deploy-key.pem

      - name: üî¢ Pegar vers√£o do projeto
        id: version
        run: |
          VERSION=$(jq -r '.version' ./package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: üê≥ Login no Docker Hub
        run: |
          echo "${{ inputs.DOCKER_PASSWORD }}" | docker login -u "${{ inputs.DOCKER_USERNAME }}" --password-stdin

      - name: üê≥ Build e Push da imagem Docker
        run: |
          docker build -t "${{ inputs.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE }}:${{ env.VERSION }}" .
          docker push "${{ inputs.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE }}:${{ env.VERSION }}"

      - name: üöÄ Atualizar container no servidor
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ inputs.SSH_REMOTE_PORT }} -i ./deploy-key.pem ${{ inputs.SSH_USER }}@${{ inputs.SSH_HOST }} << EOF
            docker pull "${{ inputs.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE }}:${{ env.VERSION }}"
            docker stop ${{ inputs.DOCKER_IMAGE }} || true
            docker rm ${{ inputs.DOCKER_IMAGE }} || true
            docker run -d --restart unless-stopped --name ${{ inputs.DOCKER_IMAGE }} \
              ${{ inputs.DOCKER_RUN_ENVS }} \
              "${{ inputs.DOCKER_USERNAME }}/${{ inputs.DOCKER_IMAGE }}:${{ env.VERSION }}"
          EOF

      - name: üßπ Apagar chave privada ap√≥s deploy
        if: always()
        run: rm -f ./deploy-key.pem
